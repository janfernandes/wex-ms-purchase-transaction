<?xml version="1.0"?>
<!DOCTYPE module PUBLIC "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!--
 
  Checkstyle configuration that checks the sun coding conventions from:
 
    - the Java Language Specification at
https://docs.oracle.com/javase/specs/jls/se11/html/index.html
 
    - the Sun Code Conventions at https://www.oracle.com/java/technologies/javase/codeconventions-contents.html
 
    - the Javadoc guidelines at
https://www.oracle.com/technical-resources/articles/java/javadoc-tool.html
 
    - the JDK Api documentation https://docs.oracle.com/en/java/javase/11/
 
    - some best practices
 
  Checkstyle is very configurable. Be sure to read the documentation at
https://checkstyle.org (or in your downloaded distribution).
 
  Most Checks are configurable, be sure to consult the documentation.
 
  To completely disable a check, just comment it out or delete it from the file.
  To suppress certain violations please review suppression filters.
 
  Finally, it is worth reading the documentation.
 
-->

<module name="Checker">
    <!--
          If you set the basedir property below, then all reported file
          names will be relative to the specified directory. See
    https://checkstyle.org/config.html#Checker

          <property name="basedir" value="${basedir}"/>
      -->
    <property name="severity" value="error"/>

    <property name="fileExtensions" value="java, properties, xml"/>

    <!-- Excludes all 'module-info.java' files              -->
    <!-- See https://checkstyle.org/config_filefilters.html -->
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="(module\-info|.*Application)\.java$"/>
    </module>

    <!--This filter together with the SuppressWarningsHolder module allows you to use the @SuppressWarning("")...  -->
    <!-- https://checkstyle.sourceforge.io/config_filters.html#SuppressWarningsFilter -->
    <module name="SuppressWarningsFilter"/>

    <!-- Checks that a package-info.java file exists for each package.     -->
    <!-- See https://checkstyle.org/config_javadoc.html#JavadocPackage -->
    <!-- removing this check as we do not use javadoc at the package level -->
    <!-- <module name="JavadocPackage" /> -->

    <!-- Checks whether files end with a new line.                        -->
    <!-- See https://checkstyle.org/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile">
        <property name="fileExtensions" value="java,properties"/>
        <!-- Windows line endings are not allowed. -->
        <property name="lineSeparator" value="lf"/>
    </module>

    <module name="OrderedProperties">
        <message key="properties.notSorted.property"
                 value="Property key ''{0}'' is not in the correct order with the previous property ''{1}''. Run the ResourceBundleEditor formatter on this file."/>
    </module>
    <module name="UniqueProperties">
        <message key="properties.duplicate.property"
                 value="Duplicate property ''{0}'' ({1} occurrence(s)). Run the ResourceBundleEditor formatter on this file."/>
    </module>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See https://checkstyle.org/config_misc.html#Translation -->
    <module name="Translation"/>

    <!-- Checks for Size Violations.                    -->
    <!-- See https://checkstyle.org/config_sizes.html -->
    <module name="FileLength">
        <property name="max" value="1000"/>
        <property name="fileExtensions" value="java"/>
    </module>
    <!-- use a lineSplit of 130 in the IDE formatter -->
    <module name="LineLength">
        <property name="max" value="130"/>
        <property name="fileExtensions" value="java"/>

        <!-- google_checks file pattern:-->
        <!-- See https://github.com/checkstyle/checkstyle/blob/master/src/main/resources/google_checks.xml -->
        <!-- we add the @Pointcut and @ApiModelProperty annotations as well as the regex: value = "some value"-->
        <property name="ignorePattern"
                  value="^package.*|^import.*|a href|href|http://|https://|ftp://|^(\s*@\w+\()(.*)&quot;.+&quot;(.*)"/>
    </module>

    <!-- Checks for whitespace                               -->
    <!-- See https://checkstyle.org/config_whitespace.html -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
        <!-- <property name="fileExtensions" value="java,txt,xml,xsl,xsd,properties,groovy,vm,MF,sh,sql,tokens,g,spec,css,csv" /> -->
    </module>

    <!-- Miscellaneous other checks.                   -->
    <!-- See https://checkstyle.org/config_misc.html -->
    <!--
            Trailing spaces are not allowed anywhere.
        -->
    <module name="RegexpSingleline">
        <property name="format" value="\s+$"/>
        <property name="minimum" value="0"/>
        <property name="maximum" value="0"/>
        <property name="fileExtensions" value="java,properties"/>
        <property name="message" value="There is an empty space at the end of the line."/>
    </module>

    <!--
    C++ style inline comment is not allowed.
    -->
    <module name="RegexpSingleline">
        <property name="format" value="\/\*.*\*\/$"/>
        <property name="fileExtensions" value="java"/>
        <property name="message" value="This kind of comment is not allowed."/>
    </module>
    <!-- Checks tags invÃ¡lidas no javadoc como @author e @version -->
    <module name="RegexpSingleline">
        <property name="format" value="\*\s@(author|version)\s.+$"/>
        <property name="fileExtensions" value="java"/>
        <property name="message"
                  value="The @author or @version tags are unnecessary in the javadoc because they are redundant information that already exists in git."/>
    </module>

    <!-- Checks for Headers                                -->
    <!-- See https://checkstyle.org/config_header.html   -->
    <!-- <module name="Header"> -->
    <!--   <property name="headerFile" value="${checkstyle.header.file}"/> -->
    <!--   <property name="fileExtensions" value="java"/> -->
    <!-- </module> -->

    <module name="TreeWalker">

        <!-- Checks for Javadoc comments.                     -->
        <!-- See https://checkstyle.org/config_javadoc.html -->
        <module name="InvalidJavadocPosition"/>
        <!-- Removed the rule constructor, as we found it unnecessary to comment on constructors -->
        <module name="JavadocMethod">
            <property name="tokens" value="METHOD_DEF, ANNOTATION_FIELD_DEF"/>
            <property name="accessModifiers" value="public, protected"/>
        </module>
        <!-- customized to allow unknown tags. Required for suppressfilter per comment -->
        <module name="JavadocType">
            <property name="allowUnknownTags" value="true"/>
        </module>
        <!-- Customized common DTO annotations to skip the obligation... -->
        <!-- we are using some annotations to skip the javadoc requirement, such as DTO and swagger annotations in the controller-->
        <module name="MissingJavadocType">
            <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, RECORD_DEF, ANNOTATION_DEF"/>
            <property name="skipAnnotations"
                      value="Getter,Builder,AllArgsConstructor,Api,Tag,ExceptionHandler,Configuration"/>
        </module>
        <!-- customized to not require javadoc in private variables only public -->
        <module name="JavadocVariable">
            <property name="scope" value="public"/>
        </module>
        <module name="JavadocStyle"/>
        <!-- rRemoved the rule constructor, as we found it unnecessary to comment on constructors -->
        <!-- included some annotations allowing the omission of javadoc.... -->
        <module name="MissingJavadocMethod">
            <property name="scope" value="public"/>
            <property name="allowedAnnotations" value="Override, Test, ExceptionHandler, Operation"/>
            <property name="tokens" value="METHOD_DEF, ANNOTATION_FIELD_DEF, COMPACT_CTOR_DEF"/>
        </module>
        <module name="NonEmptyAtclauseDescription">
            <property name="javadocTokens" value="PARAM_LITERAL, RETURN_LITERAL, DEPRECATED_LITERAL"/>
        </module>
        <module name="SummaryJavadoc"/>

        <!-- Checks for Naming Conventions.                  -->
        <!-- See https://checkstyle.org/config_naming.html -->
        <module name="ConstantName"/>
        <!-- LocalFinalVariableName, LocalVariableName, CatchParameterName, MemberName, ParameterName -->
        <module name="LocalFinalVariableName">
            <property name="format" value="^(id|[a-z][a-z0-9][a-zA-Z0-9]{0,30})$"/>
        </module>
        <module name="LocalVariableName">
            <property name="format" value="^(i|id|[a-z][a-z0-9][a-zA-Z0-9]{0,30})$"/>
        </module>
        <!-- This rule ignores class members and only applies to instance members. -->
        <module name="MemberName">
            <property name="format" value="^(id|[a-z][a-z0-9][a-zA-Z0-9]{0,30})$"/>
        </module>
        <module name="MethodName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
        </module>
        <!-- changed to google default, lowercase only -->
        <!-- See https://github.com/checkstyle/checkstyle/blob/master/src/main/resources/google_checks.xml#L172 -->
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
        </module>
        <module name="ParameterName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
        </module>

        <module name="StaticVariableName"/>
        <module name="TypeName"/>
        <module name="CatchParameterName">
            <property name="format" value="^(e|t|ex|[a-z][a-z][a-zA-Z]{1,30})$"/>
        </module>

        <!-- Checks for imports                              -->
        <!-- See https://checkstyle.org/config_imports.html -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport">
            <!-- defaults to sun.* packages -->
            <property name="regexp" value="true"/>
            <property name="illegalPkgs"
                      value="sun, .+\.log4j\..+, net\.logstash.+\.lang3, io\.micrometer\.core\..+\.StringUtils, org\.apache\.commons\..+\.HashedMap;"/>
        </module>
        <module name="RedundantImport"/>
        <module name="UnusedImports">
            <property name="processJavadoc" value="false"/>
        </module>

        <!-- Checks for Size Violations.                    -->
        <!-- See https://checkstyle.org/config_sizes.html -->
        <module name="MethodLength"/>
        <module name="ParameterNumber"/>

        <!-- Checks for whitespace                               -->
        <!-- See https://checkstyle.org/config_whitespace.html -->
        <module name="EmptyForIteratorPad"/>
        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
            <property name="allowMultipleEmptyLines" value="false"/>
            <property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
        </module>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter">
            <property name="tokens"
                      value="AT, INC, DEC, UNARY_MINUS, UNARY_PLUS, BNOT, LNOT, DOT, ARRAY_DECLARATOR, INDEX_OP, METHOD_REF"/>
        </module>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>

        <!-- Modifier Checks                                    -->
        <!-- See https://checkstyle.org/config_modifier.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See https://checkstyle.org/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock">
            <property name="option" value="TEXT"/>
            <property name="tokens" value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
        </module>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>

        <!-- Checks for common coding problems               -->
        <!-- See https://checkstyle.org/config_coding.html -->
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <!-- we are ignoring this rule in Setters in addition to constructors.... -->
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true"/>
            <property name="ignoreSetter" value="true"/>
        </module>
        <module name="IllegalInstantiation"/>
        <module name="InnerAssignment"/>
        <module name="MagicNumber">
            <property name="ignoreAnnotation" value="true"/>
        </module>
        <module name="MissingSwitchDefault"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>

        <!-- Checks for class design                         -->
        <!-- See https://checkstyle.org/config_design.html -->
        <!-- including the Override annotation to ignore as our interfaces must already be commented -->
        <!-- removing this rule, as our classes are mostly spring beans and need to be inherited to function the proxy wrapper that are created around them -->
        <!--         <module name="DesignForExtension">
        <property name="ignoredAnnotations" value="After, AfterClass, Before, BeforeClass, Test, Override" />
        </module> -->
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>
        <module name="VisibilityModifier">
            <property name="protectedAllowed" value="true"/>
        </module>

        <!-- Miscellaneous other checks.                   -->
        <!-- See https://checkstyle.org/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <module name="FinalParameters"/>
        <module name="Indentation">
            <property name="basicOffset" value="4"/>
            <property name="braceAdjustment" value="0"/>
            <property name="caseIndent" value="4"/>
            <property name="throwsIndent" value="4"/>
            <property name="arrayInitIndent" value="4"/>
            <property name="lineWrappingIndentation" value="4"/>
        </module>
        <module name="TodoComment"/>
        <module name="UpperEll"/>

        <!-- https://checkstyle.sourceforge.io/config_filters.html#SuppressWarningsFilter -->
        <module name="SuppressWarningsHolder"/>

        <!-- https://checkstyle.org/config_filters.html#SuppressionXpathFilter -->
        <module name="SuppressionXpathFilter">
            <property name="file" value="${br.com.wex.suppressionxpathfilter.config}"
                      default="/config/checkstyle-xpath-suppressions.xml"/>
            <property name="optional" value="true"/>
        </module>
    </module>
</module>
